With joinq as (select r1.id as id, r1.a1 as a1, r1.ub_a1 as ub_a1, r1.lb_a1 as lb_a1, r1.a2 as a2, r1.ub_a2 as ub_a2, r1.lb_a2 as lb_a2, r2.id as rid, r2.a1 as ra1, r2.ub_a1 as ub_ra1, r2.lb_a1 as lb_ra1, r2.a2 as ra2, r2.ub_a2 as ub_ra2, r2.lb_a2 as lb_ra2 from range_r r1 join range_r r2 on r1.lb_a1<=r2.lb_a1 and r1.ub_a1>=r2.lb_a1), endpoints as (select *, lb_ra2 as pt, 0::numeric AS isend from joinq UNION ALL select *, ub_ra2 as pt, 1::numeric AS isend from joinq), bounds as (select *, ( CASE WHEN isend=0 THEN COALESCE(SUM( isend ) OVER ( PARTITION BY id ORDER BY pt ASC RANGE BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING), 0) ELSE 0 END) AS lb_rank ,( CASE WHEN isend=1 THEN SUM((1 - isend )) OVER (PARTITION BY id ORDER BY pt ASC ) ELSE 0 END) AS ub_rank FROM endpoints), ranked as (SELECT id,min(a1) as a1,min(ub_a1) as ub_a1,min(lb_a1) as lb_a1,min(a2) as a2,min(ub_a2) as ub_a2,min(lb_a2) as lb_a2,rid,min(ra1) as ra1,min(ub_ra1) as ub_ra1,min(lb_ra1) as lb_ra1,min(ra2) as ra2, min(ub_ra2) as ub_ra2,min(lb_ra2) as lb_ra2, max( UB_rank ) AS ub_rank, max( LB_rank )+1 AS lb_rank FROM bounds GROUP BY id,rid), rankproj as (select id,a1,ub_a1,lb_a1,a2,ub_a2,lb_a2,rid,ra1,ub_ra1,lb_ra1,ra2,ub_ra2,lb_ra2,ub_rank,lb_rank,ub_lrank,lb_lrank from ranked lr join (select id as xid, ub_rank as ub_lrank, lb_rank as lb_lrank from ranked where id=rid) rr on lr.id=rr.xid), inwindow as (select * from rankproj where lb_lrank <= ub_rank and ub_lrank+3>=lb_rank), iscert as (select *,case when ub_a1=lb_a1 and ub_ra1=lb_ra1 and ub_a1=ub_ra1 and lb_lrank <= lb_rank and ub_lrank+3 >= ub_rank then 1::numeric else 0::numeric end as iscert from inwindow) select id,ub_a1,lb_a1,ub_ra1,lb_ra1,ub_lrank,lb_lrank,rid,ub_rank,lb_rank,iscert from iscert order by (id,iscert,ra2);
